-- Create Database

USE master;
GO

IF EXISTS (
	SELECT name
	FROM sys.databases
	WHERE name = N'CASINO'
)

DROP DATABASE CASINO;
GO

CREATE DATABASE CASINO;
GO

-- Drop Tables
DROP TABLE IF EXISTS SHIFT_INV;
DROP TABLE IF EXISTS INVENTORY;
DROP TABLE IF EXISTS LEAVE;
DROP TABLE IF EXISTS WRITTEN_WARNING;
DROP TABLE IF EXISTS ACHIEVEMENT;
DROP TABLE IF EXISTS EMPLOYEE_REGULATORY_TRAINING;
DROP INDEX IF EXISTS FK2 ON EMPLOYEE_REGULATORY_TRAINING;
DROP INDEX IF EXISTS FK1 ON EMPLOYEE_REGULATORY_TRAINING;
DROP TABLE IF EXISTS REGULATORY_TRAINING;
DROP TABLE IF EXISTS EMPLOYEE_SKILL_TRAINING;
DROP INDEX IF EXISTS FK2 ON EMPLOYEE_SKILL_TRAINING;
DROP INDEX IF EXISTS FK1 ON EMPLOYEE_SKILL_TRAINING;
DROP TABLE IF EXISTS SKILL_TRAINING;
DROP TABLE IF EXISTS TRAINING_SESSION;
DROP TABLE IF EXISTS SEC_SKILL;
DROP TABLE IF EXISTS SKILL;
DROP TABLE IF EXISTS SECTION;
DROP TABLE IF EXISTS SHIFT;
DROP TABLE IF EXISTS SCHEDULE;
DROP TABLE IF EXISTS JOB_HIST;
DROP TABLE IF EXISTS EMPLOYEE;
DROP TABLE IF EXISTS ROLE_CERTIFICATION;
DROP TABLE IF EXISTS CERTIFICATION;
DROP TABLE IF EXISTS ROLE;
DROP TABLE IF EXISTS DEPARTMENT;

USE CASINO;

-- Create Tables
CREATE TABLE DEPARTMENT (
	DEP_ID INT PRIMARY KEY IDENTITY(1,1),
	DEP_NAME VARCHAR(39) NOT NULL
);

CREATE TABLE ROLE (
	ROLE_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	ROLE_TITLE VARCHAR(30) NOT NULL,
	ROLE_DESCRIPTION VARCHAR(75)
);

CREATE TABLE CERTIFICATION (
	CERT_ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CERT_NAME VARCHAR(30) NOT NULL,
	CERT_VALID_FOR DATE NOT NULL
);

CREATE TABLE ROLE_CERTIFICATION (
	CERT_ID INT NOT NULL,
	ROLE_ID INT NOT NULL,
	FOREIGN KEY(CERT_ID) REFERENCES CERTIFICATION(CERT_ID),
	FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ROLE_ID),
	PRIMARY KEY(CERT_ID, ROLE_ID)
);

CREATE TABLE [EMPLOYEE] (
  [EMP_ID] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
  [DEP_ID] INT NOT NULL,
  [EMP_ROLE] INT NOT NULL,
  [DATE_ASSIGNED] DATE NOT NULL,
  [EMP_FNAME] VARCHAR(30) NOT NULL,
  [EMP_LNAME] VARCHAR(30) NOT NULL,
  [EMP_HIRE_DATE] DATE NOT NULL,
  [EMP_PAY_RATE] DECIMAL(10, 2) NOT NULL,
  [EMP_STREET_NUM] VARCHAR(10) NOT NULL,
  [EMP_STREET] VARCHAR(30) NOT NULL,
  [EMP_CITY] VARCHAR(30) NOT NULL,
  [EMP_DOB] DATE NOT NULL,
  [EMP_FIRE_DATE] DATE,
  [EMP_LOCKER] INT,
  [EMP_VACA_ENTITLEMENT] INT NOT NULL DEFAULT 0,
  [EMP_SICK_ENTITLEMENT] INT NOT NULL DEFAULT 0,
  [EMP_GENDER] CHAR(1),
  [EMP_AGE] INT NOT NULL,
  CONSTRAINT [FK_EMPLOYEE.DEP_ID]
    FOREIGN KEY ([DEP_ID])
      REFERENCES [DEPARTMENT]([DEP_ID]),
  CONSTRAINT [FK_EMPLOYEE.EMP_ROLE]
    FOREIGN KEY ([EMP_ROLE])
      REFERENCES [ROLE]([ROLE_ID])
);

CREATE TABLE JOB_HIST (
	EMP_ID INT NOT NULL,
	DATE_ASSIGNED DATE NOT NULL,
	DEP_ID INT NOT NULL,
	ROLE_ID INT NOT NULL,
	EMP_PAY_RATE DECIMAL(10, 2) NOT NULL,
	FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(EMP_ID),
	FOREIGN KEY(DEP_ID) REFERENCES DEPARTMENT(DEP_ID),
	FOREIGN KEY(ROLE_ID) REFERENCES ROLE(ROLE_ID),
	PRIMARY KEY (EMP_ID, DATE_ASSIGNED, DEP_ID, ROLE_ID)
);

CREATE TABLE SCHEDULE (
	SCH_ID INT PRIMARY KEY IDENTITY(1,1),
	EMP_ID INTEGER NOT NULL,
	SCH_DATE DATE NOT NULL,
	FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(EMP_ID) ON UPDATE CASCADE
);

CREATE TABLE SHIFT (
	SHIFT_ID INT PRIMARY KEY IDENTITY(1,1),
	SHIFT_START TIME NOT NULL,
	SHIFT_END TIME NOT NULL,
	SCH_ID INTEGER NOT NULL,
	FOREIGN KEY(SCH_ID) REFERENCES SCHEDULE(SCH_ID) ON UPDATE CASCADE
);

CREATE TABLE SECTION (
	SEC_ID INT PRIMARY KEY IDENTITY(1,1),
	SEC_NAME VARCHAR(30) NOT NULL
);

CREATE TABLE SKILL (
	SKILL_ID INT PRIMARY KEY IDENTITY(1,1),
	SKILL_NAME VARCHAR(30) NOT NULL
);

CREATE TABLE SEC_SKILL (
SKILL_ID INT NOT NULL,
SEC_ID INT NOT NULL,
PRIMARY KEY(SKILL_ID, SEC_ID),
FOREIGN KEY(SKILL_ID) REFERENCES SKILL(SKILL_ID) ON UPDATE CASCADE,
FOREIGN KEY(SEC_ID) REFERENCES SECTION(SEC_ID) ON UPDATE CASCADE
);

CREATE TABLE [TRAINING_SESSION] (
[TS_ID] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
[TS_DATE] DATE NOT NULL,
[TS_TYPE] VARCHAR(30) NOT NULL
);

CREATE TABLE [SKILL_TRAINING] (
[TS_ID] INT NOT NULL,
[SKILL_ID] INT NOT NULL,
[TS_MANAGER_ID] INT NOT NULL,
[TS_SUPERVISOR_ID] INT NOT NULL,
CONSTRAINT [FK_SKILL_TRAINING.TS_ID]
FOREIGN KEY ([TS_ID])
REFERENCES TRAINING_SESSION,
CONSTRAINT [FK_SKILL_TRAINING.SKILL_ID]
FOREIGN KEY ([SKILL_ID])
REFERENCES SKILL
);

CREATE TABLE [EMPLOYEE_SKILL_TRAINING] (
[TS_ID] INT NOT NULL,
[EMP_ID] INT NOT NULL,
PRIMARY KEY ([TS_ID], [EMP_ID]),
FOREIGN KEY([TS_ID]) REFERENCES TRAINING_SESSION,
FOREIGN KEY([EMP_ID]) REFERENCES EMPLOYEE
);

CREATE INDEX [FK1] ON [EMPLOYEE_SKILL_TRAINING] ([TS_ID]);

CREATE INDEX [FK2] ON [EMPLOYEE_SKILL_TRAINING] ([EMP_ID]);

CREATE TABLE [REGULATORY_TRAINING] (
[TS_ID] INT NOT NULL,
[CERT_ID] INT NOT NULL,
CONSTRAINT [FK_REGULATORY_TRAINING.TS_ID]
FOREIGN KEY ([TS_ID])
REFERENCES TRAINING_SESSION,
CONSTRAINT [FK_REGULATORY_TRAINING.CERT_ID]
FOREIGN KEY ([CERT_ID])
REFERENCES CERTIFICATION
);

CREATE TABLE [EMPLOYEE_REGULATORY_TRAINING] (
[TS_ID] INT NOT NULL,
[EMP_ID] INT NOT NULL,
[EXPIRATION_DATE] DATE NOT NULL,
PRIMARY KEY ([TS_ID], [EMP_ID]),
FOREIGN KEY([TS_ID]) REFERENCES TRAINING_SESSION,
FOREIGN KEY([EMP_ID]) REFERENCES EMPLOYEE
);

CREATE INDEX [FK1] ON [EMPLOYEE_REGULATORY_TRAINING] ([TS_ID]);

CREATE INDEX [FK2] ON [EMPLOYEE_REGULATORY_TRAINING] ([EMP_ID]);

CREATE TABLE [ACHIEVEMENT] (
[ACHIEVEMENT_ID] INT NOT NULL PRIMARY KEY IDENTITY(1,1),
[TS_ID] INT NOT NULL,
[ACH_TITLE] VARCHAR(50) NOT NULL,
[ACH_DESC] VARCHAR(200),
FOREIGN KEY([TS_ID]) REFERENCES TRAINING_SESSION
);

CREATE TABLE WRITTEN_WARNING (
WW_ID INT PRIMARY KEY IDENTITY(1,1),
WW_DATE_ISSUED DATE NOT NULL,
WW_MANAGER_ID INT NOT NULL,
WW_COMPOUNDING_UNTIL DATE,
WW_LEVEL INT NOT NULL,
WW_COMMENTS VARCHAR(300),
EMP_ID INT NOT NULL,
-- FOREIGN KEY(WW_MANAGER_ID) REFERENCES ?
FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(EMP_ID) ON UPDATE CASCADE
);

CREATE TABLE LEAVE (
LEAVE_ID INT PRIMARY KEY IDENTITY(1,1),
EMP_ID INT NOT NULL,
LEAVE_START_DATE DATE NOT NULL,
LEAVE_REASON VARCHAR(100),
LEAVE_END_DATE DATE NOT NULL,
LEAVE_COMMENTS VARCHAR(300),
FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(EMP_ID) ON UPDATE CASCADE
);

CREATE TABLE INVENTORY (
INV_ID INT PRIMARY KEY IDENTITY(1,1),
INV_NAME VARCHAR(50) NOT NULL,
INV_PRICE DECIMAL(10, 2) NOT NULL,
INV_QTY INT NOT NULL,
INV_EXP DATE
);

CREATE TABLE SHIFT_INV (
SHIFT_ID INT NOT NULL,
INV_ID INT NOT NULL,
SHIFT_INV_QTY INT NOT NULL,
PRIMARY KEY(SHIFT_ID, INV_ID),
FOREIGN KEY(SHIFT_ID) REFERENCES SHIFT(SHIFT_ID) ON UPDATE CASCADE,
FOREIGN KEY(INV_ID) REFERENCES INVENTORY(INV_ID) ON UPDATE CASCADE
);

-- Fill in Tables with values
